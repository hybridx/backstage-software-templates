default:
  tags: [shared]
image: images.paas.redhat.com/denair/comp-reg

variables:
  GITLAB_TOKEN: "$DSAL_GITLAB_TOKEN"
  DEV_FILE_URL: "$FILE_URL_DEV"
  DEV_DEPLOY_ENV: "$DEV_DEPLOY_ENV"
  DEV_DEPLOY_KEY: "$DEV_SPASHIP_DEPLOY_KEY"
  QA_FILE_URL: "$FILE_URL_QA"
  QA_DEPLOY_ENV: "$QA_DEPLOY_ENV"
  QA_DEPLOY_KEY: "$QA_SPASHIP_DEPLOY_KEY"
  STAGE_FILE_URL: "$FILE_URL_STAGE"
  STAGE_DEPLOY_ENV: "$STAGE_DEPLOY_ENV"
  STAGE_DEPLOY_KEY: "$STAGE_SPASHIP_DEPLOY_KEY"
  PROD_FILE_URL: "$FILE_URL_PROD"
  PROD_DEPLOY_ENV: "$PROD_DEPLOY_ENV"
  PROD_DEPLOY_KEY: "$PROD_SPASHIP_DEPLOY_KEY"
stages:
  - test
  - deployment

.deploySPA: &deploySPA
  script:
    - npm install
    - echo "Build creation started for $DEPLOY_ENV"
    - curl -k --header PRIVATE-TOKEN:$GITLAB_TOKEN $FILE_URL -o .env
    - npm run build
    - echo "Build created successfully for $DEPLOY_ENV"
    - export VERSION=$(node -p "require('./package.json').version")
    - npx @spaship/cli@latest deploy --apikey=$DEPLOY_KEY --env=$SPASHIP_DEPLOY_ENV --ref=$VERSION

unit-test:
  stage: test
  script:
    - npm install
    - npm test
  only:
    - merge_requests

dev deployment:
  <<: *deploySPA
  stage: deployment
  only:
    - main
  allow_failure: true
  variables:
    DEPLOY_ENV: dev
    SPASHIP_DEPLOY_ENV: $DEV_DEPLOY_ENV
    DEPLOY_KEY: $DEV_DEPLOY_KEY
    FILE_URL: "$DEV_FILE_URL"

qa deployment:
  <<: *deploySPA
  stage: deployment
  only:
    - main
  variables:
    DEPLOY_ENV: stage
    SPASHIP_DEPLOY_ENV: $QA_DEPLOY_ENV
    DEPLOY_KEY: $QA_DEPLOY_KEY
    FILE_URL: $QA_FILE_URL

stage deployment:
  <<: *deploySPA
  stage: deployment
  only:
    refs:
      - main
  when: manual
  variables:
    DEPLOY_ENV: stage
    SPASHIP_DEPLOY_ENV: $STAGE_DEPLOY_ENV
    DEPLOY_KEY: $STAGE_DEPLOY_KEY
    FILE_URL: $STAGE_FILE_URL

prod deployment:
  <<: *deploySPA
  stage: deployment
  only:
    refs:
      - main
  when: manual
  variables:
    DEPLOY_ENV: prod
    SPASHIP_DEPLOY_ENV: $PROD_DEPLOY_ENV
    DEPLOY_KEY: $PROD_DEPLOY_KEY
    FILE_URL: $PROD_FILE_URL

